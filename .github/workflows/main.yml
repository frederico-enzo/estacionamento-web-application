name: CI Pipeline

on:
  push:
    branches: [ feat/docker ]
  pull_request:
    branches: [ feat/docker ]

jobs:
  backend:
    name: Build e Teste do Backend
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/testdb
      SPRING_DATASOURCE_USERNAME: testuser
      SPRING_DATASOURCE_PASSWORD: testpass
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar JDK 20
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '20'

      - name: Cache do Maven
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Build e Test backend
        working-directory: API
        run: mvn clean verify

      - name: Login no Docker Hub
        uses: docker/login-action@v3.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build e Push da Imagem Docker do Backend
        run: |
          docker buildx build --file API/Dockerfile --tag ${{ secrets.DOCKER_USERNAME }}/estacionamento-web-application-backend:feat-docker --push .

  frontend:
    name: Build e Teste do Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Cache de dependências Node
        uses: actions/cache@v3
        with:
          path: interface/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('interface/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Instalar dependências do frontend
        working-directory: interface
        run: npm i --force

      - name: Executar testes do frontend
        working-directory: interface
        run: npm run test:unit

      - name: Login no Docker Hub
        uses: docker/login-action@v3.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build e Push da Imagem Docker do Frontend
        run: |
          docker buildx build --file interface/Dockerfile --tag ${{ secrets.DOCKER_USERNAME }}/estacionamento-web-application-frontend:feat-docker --push .
